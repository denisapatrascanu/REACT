import { createClient } from '../prismicio'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Playlist } from '../components/Playlist/Playlist'
import styles from '../styles/Home.module.css'
import { SliceLike, SliceZoneLike } from '@prismicio/react'
import { FunctionComponent, useState } from 'react'
import { BottomBar } from '../components/BottomBar/BottomBar'
import { IPrimary } from '../slices/Song'
interface IProps{
  songs:SliceZoneLike<SliceLike<string>>
}
const Home: FunctionComponent <IProps> = (props) => {
  //@ts-ignore
  const [currentSong, setCurrentSong] = useState(props.songs[0].primary);
  const [playling, setPlaying] = useState(false);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <Playlist slices = {props.songs} setSong={(data: IPrimary) => setCurrentSong(data)}/>
      {/*@ts-ignore*/}
      <BottomBar songInfo={currentSong} changeNext={() =>{ }} changePrev = {() =>{ }} />
    </div>
  )
}

export const getServerSideProps = async () =>{
 let notFound =  false;
 let data;
 const client = createClient();

 try{
  data=await client.getByUID("playlist","main");
}
  catch (e) {
    console.error("The playlist was not found");
    notFound =true;

}
console.dir(data, {depth: null});

return{
  props: {songs: data?.data.slices},
  notFound : notFound
  }
}

export default Home
